"use strict";const gameBoard=(()=>{let e=Array(9).fill("");const t=t=>{return e[t]===""?true:false};return{contents:e,isEmptyAtIndex:t}})();const displayController=(()=>{const e=e=>{for(let t of e){let e=document.querySelector(`[data-board-index="${t}"]`);e.innerHTML=gameBoard.contents[t]}};const t=e=>{for(let t of e){let e=document.querySelector(`[data-board-index="${t}"]`);e.classList.add("winner")}};return{updateSquare:e,colorSquares:t}})();const playerFactory=(e,t)=>{return{symbol:e,name:t}};const gameFactory=(()=>{const e=[...document.querySelectorAll(".square")];let t=playerFactory("X","Player 1");let r=playerFactory("O","Player 2");let o=0;let a=false;const n=()=>{e.forEach(e=>{e.onclick=(()=>{s(e);u()})})};const s=e=>{let t=e.getAttribute("data-board-index");console.log(gameBoard.contents);if(!gameBoard.isEmptyAtIndex(t)||a===true){return}else{o++;l(t);displayController.updateSquare([t])}};const l=e=>{c(d(),e)};const c=(e,t)=>{gameBoard.contents[t]=e.symbol};const d=()=>{return o%2===0?r:t};const u=()=>{const e=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];if(o>=4){e.forEach(e=>{if(gameBoard.contents[e[0]]===""){return}else if(gameBoard.contents[e[0]]===gameBoard.contents[e[1]]&&gameBoard.contents[e[0]]===gameBoard.contents[e[2]]){a=true;displayController.colorSquares(e);let t=confirm(`${d().name} won! Play again?`);i(t)}})}if(o===9){a=true;let e=confirm(`The game tied. Play again?`);i(e)}};const i=e=>{if(e===false){return}else{m()}};const m=()=>{a=false;o=0;for(let e=0;e<gameBoard.contents.length;e++){gameBoard.contents[e]=""}displayController.updateSquare(Array(9).keys());y()};const y=()=>{e.forEach(e=>{e.classList.remove("winner")})};return{loadSquares:n}})();gameFactory.loadSquares();